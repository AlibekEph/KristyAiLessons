import React, { useState, useEffect } from 'react'
import { useParams } from 'react-router-dom'
import { 
  ArrowLeft, 
  Calendar, 
  Clock, 
  PlayCircle, 
  FileText, 
  CheckCircle, 
  AlertCircle,
  Loader,
  Book,
  Languages,
  Download,
  RefreshCw,
  Settings,
  ExternalLink
} from 'lucide-react'
import { Link } from 'react-router-dom'
import { format } from 'date-fns'
import { ru } from 'date-fns/locale'
import { lessonsAPI, apiUtils } from '../services/api'
import LoadingSpinner from '../components/LoadingSpinner'

function LessonDetailPage() {
  const { lessonId } = useParams()
  
  const [lesson, setLesson] = useState(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)
  const [processing, setProcessing] = useState(false)

  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  const mockLesson = {
    id: lessonId,
    meeting_url: 'https://meet.google.com/hmn-wtbp-myh',
    lesson_type: 'chinese',
    student_level: 'beginner',
    status: 'completed',
    created_at: '2024-12-29T08:32:28.560986Z',
    bot_id: 'bot_123',
    recording_url: 'https://example.com/recording.mp4',
    materials_id: 'materials_456',
    description: '–£—Ä–æ–∫ –ø–æ –∏–∑—É—á–µ–Ω–∏—é –±–∞–∑–æ–≤—ã—Ö —Ñ—Ä–∞–∑ –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö. –ù–∞ —ç—Ç–æ–º —É—Ä–æ–∫–µ –º—ã –∏–∑—É—á–∏–ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è, —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 10, –∏ –±–∞–∑–æ–≤—ã–µ —Ñ—Ä–∞–∑—ã –≤–µ–∂–ª–∏–≤–æ—Å—Ç–∏. –°—Ç—É–¥–µ–Ω—Ç –ø–æ–∫–∞–∑–∞–ª —Ö–æ—Ä–æ—à–µ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ç–æ–Ω–æ–≤ –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –∑–≤—É–∫–æ–≤.',
    homework: '–í—ã—É—á–∏—Ç—å 10 –±–∞–∑–æ–≤—ã—Ö –∏–µ—Ä–æ–≥–ª–∏—Ñ–æ–≤: ‰Ω†Â•Ω (–ø—Ä–∏–≤–µ—Ç), Ë∞¢Ë∞¢ (—Å–ø–∞—Å–∏–±–æ), ËØ∑ (–ø–æ–∂–∞–ª—É–π—Å—Ç–∞), ÂØπ‰∏çËµ∑ (–∏–∑–≤–∏–Ω–∏—Ç–µ), ÂÜçËßÅ (–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è), ‰∏Ä Âà∞ ÂçÅ (—á–∏—Å–ª–∞ 1-10). –ü–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ —Ç–æ–Ω–æ–≤ –∏—Å–ø–æ–ª—å–∑—É—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –ó–∞–ø–∏—Å–∞—Ç—å —Å–µ–±—è, –ø—Ä–æ–∏–∑–Ω–æ—Å—è –≤—Å–µ –∏–∑—É—á–µ–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã, –∏ –ø—Ä–∏—Å–ª–∞—Ç—å –∞—É–¥–∏–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.',
    transcript: '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —É—Ä–æ–∫ –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞! –°–µ–≥–æ–¥–Ω—è –º—ã –∏–∑—É—á–∞–µ–º –±–∞–∑–æ–≤—ã–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è...\n\n–°—Ç—É–¥–µ–Ω—Ç: –°–ø–∞—Å–∏–±–æ! –Ø –≥–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å.\n\n–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: –û—Ç–ª–∏—á–Ω–æ! –ù–∞—á–Ω–µ–º —Å —Å–∞–º–æ–≥–æ –≤–∞–∂–Ω–æ–≥–æ - "‰Ω†Â•Ω" (n«ê h«éo)...',
    materials: {
      vocabulary: [
        { chinese: '‰Ω†Â•Ω', pinyin: 'n«ê h«éo', translation: '–ø—Ä–∏–≤–µ—Ç, –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ' },
        { chinese: 'Ë∞¢Ë∞¢', pinyin: 'xi√® xi√®', translation: '—Å–ø–∞—Å–∏–±–æ' },
        { chinese: 'ËØ∑', pinyin: 'q«êng', translation: '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞' },
        { chinese: 'ÂØπ‰∏çËµ∑', pinyin: 'du√¨ b√π q«ê', translation: '–∏–∑–≤–∏–Ω–∏—Ç–µ' },
        { chinese: 'ÂÜçËßÅ', pinyin: 'z√†i ji√†n', translation: '–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è' }
      ],
      grammar_points: [
        '–ë–∞–∑–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è: –ü–æ–¥–ª–µ–∂–∞—â–µ–µ + –°–∫–∞–∑—É–µ–º–æ–µ + –î–æ–ø–æ–ª–Ω–µ–Ω–∏–µ',
        '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–æ–Ω–æ–≤ –≤ –∫–∏—Ç–∞–π—Å–∫–æ–º —è–∑—ã–∫–µ',
        '–§–æ—Ä–º—ã –≤–µ–∂–ª–∏–≤–æ—Å—Ç–∏ –∏ –æ–±—Ä–∞—â–µ–Ω–∏—è'
      ],
      practice_exercises: [
        '–ü—Ä–æ–∏–∑–Ω–µ—Å–∏—Ç–µ –∫–∞–∂–¥–æ–µ –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ 10 —Ä–∞–∑ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Ç–æ–Ω–∞–º–∏',
        '–°–æ—Å—Ç–∞–≤—å—Ç–µ –¥–∏–∞–ª–æ–≥, –∏—Å–ø–æ–ª—å–∑—É—è –≤—Å–µ –∏–∑—É—á–µ–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã',
        '–ù–∞–ø–∏—à–∏—Ç–µ –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã –ø–æ –ø–∞–º—è—Ç–∏'
      ]
    }
  }

  const fetchLesson = async () => {
    try {
      setLoading(true)
      setError(null)
      
      // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
      await new Promise(resolve => setTimeout(resolve, 1000))
      setLesson(mockLesson)
    } catch (err) {
      console.error('Failed to fetch lesson:', err)
      setError(apiUtils.formatError(err))
    } finally {
      setLoading(false)
    }
  }

  useEffect(() => {
    fetchLesson()
  }, [lessonId])

  if (loading) {
    return (
      <div className="flex justify-center items-center min-h-96">
        <LoadingSpinner size="lg" text="–ó–∞–≥—Ä—É–∑–∫–∞ —É—Ä–æ–∫–∞..." />
      </div>
    )
  }

  if (!lesson) {
    return (
      <div className="text-center py-12">
        <FileText className="w-16 h-16 text-gray-400 mx-auto mb-4" />
        <h2 className="text-xl font-semibold text-gray-900 mb-2">–£—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω</h2>
        <Link to="/" className="btn-primary">–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —É—Ä–æ–∫–∞–º</Link>
      </div>
    )
  }

  const createdDate = new Date(lesson.created_at)

  return (
    <div className="max-w-4xl mx-auto">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="mb-8">
        <Link 
          to="/" 
          className="inline-flex items-center text-gray-600 hover:text-gray-900 mb-4 transition-colors"
        >
          <ArrowLeft className="w-4 h-4 mr-2" />
          –ù–∞–∑–∞–¥ –∫ —É—Ä–æ–∫–∞–º
        </Link>
        
        <div className="flex items-start justify-between">
          <div>
            <div className="flex items-center space-x-3 mb-2">
              <div className="w-12 h-12 bg-gradient-primary rounded-lg flex items-center justify-center">
                <Languages className="w-6 h-6 text-white" />
              </div>
              <div>
                <h1 className="text-2xl font-bold text-gray-900">
                  üá®üá≥ –ö–∏—Ç–∞–π—Å–∫–∏–π —è–∑—ã–∫
                </h1>
                <p className="text-gray-600">
                  –£—Ä–æ–≤–µ–Ω—å: {lesson.student_level} | ID: {lesson.id.split('_')[1]?.substring(0, 12)}
                </p>
              </div>
            </div>
            <div className="flex items-center space-x-4 text-sm text-gray-500">
              <span className="flex items-center">
                <Calendar className="w-4 h-4 mr-1" />
                {format(createdDate, 'dd MMMM yyyy, HH:mm', { locale: ru })}
              </span>
              <span className="status-completed">
                <CheckCircle className="w-3 h-3" />
                –ó–∞–≤–µ—Ä—à–µ–Ω–æ
              </span>
            </div>
          </div>
        </div>
      </div>

      <div className="grid gap-8 lg:grid-cols-3">
        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="lg:col-span-2 space-y-6">
          {/* –û–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–∞ */}
          <div className="card">
            <h2 className="text-lg font-semibold text-gray-900 mb-4 flex items-center">
              <FileText className="w-5 h-5 mr-2" />
              –û–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–∞
            </h2>
            <p className="text-gray-700 leading-relaxed">{lesson.description}</p>
          </div>

          {/* –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ */}
          <div className="card">
            <h2 className="text-lg font-semibold text-gray-900 mb-4 flex items-center">
              <Book className="w-5 h-5 mr-2 text-blue-600" />
              –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ
            </h2>
            <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
              <p className="text-blue-800 leading-relaxed">{lesson.homework}</p>
            </div>
          </div>

          {/* –ú–∞—Ç–µ—Ä–∏–∞–ª—ã —É—Ä–æ–∫–∞ */}
          <div className="card">
            <h2 className="text-lg font-semibold text-gray-900 mb-4 flex items-center">
              <Languages className="w-5 h-5 mr-2 text-purple-600" />
              –ú–∞—Ç–µ—Ä–∏–∞–ª—ã —É—Ä–æ–∫–∞
            </h2>
            
            {/* –°–ª–æ–≤–∞—Ä—å */}
            <div className="mb-6">
              <h3 className="font-medium text-gray-900 mb-3">–ù–æ–≤—ã–µ —Å–ª–æ–≤–∞</h3>
              <div className="grid gap-3 sm:grid-cols-2">
                {lesson.materials.vocabulary.map((word, index) => (
                  <div key={index} className="bg-gray-50 rounded-lg p-3">
                    <div className="text-lg font-semibold text-gray-900">{word.chinese}</div>
                    <div className="text-sm text-gray-600">{word.pinyin}</div>
                    <div className="text-sm text-gray-800">{word.translation}</div>
                  </div>
                ))}
              </div>
            </div>

            {/* –ì—Ä–∞–º–º–∞—Ç–∏–∫–∞ */}
            <div className="mb-6">
              <h3 className="font-medium text-gray-900 mb-3">–ì—Ä–∞–º–º–∞—Ç–∏–∫–∞</h3>
              <ul className="list-disc list-inside space-y-2 text-gray-700">
                {lesson.materials.grammar_points.map((point, index) => (
                  <li key={index}>{point}</li>
                ))}
              </ul>
            </div>

            {/* –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è */}
            <div>
              <h3 className="font-medium text-gray-900 mb-3">–£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è</h3>
              <ol className="list-decimal list-inside space-y-2 text-gray-700">
                {lesson.materials.practice_exercises.map((exercise, index) => (
                  <li key={index}>{exercise}</li>
                ))}
              </ol>
            </div>
          </div>
        </div>

        {/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å */}
        <div className="space-y-6">
          {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
          <div className="card">
            <h3 className="font-semibold text-gray-900 mb-4">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h3>
            <div className="space-y-3">
              <button className="w-full flex items-center justify-center p-3 bg-blue-50 border border-blue-200 rounded-lg hover:bg-blue-100 transition-colors">
                <PlayCircle className="w-5 h-5 text-blue-600 mr-2" />
                <span className="text-blue-800 font-medium">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø–∏—Å—å</span>
              </button>
              
              <button className="w-full flex items-center justify-center p-3 bg-green-50 border border-green-200 rounded-lg hover:bg-green-100 transition-colors">
                <Download className="w-5 h-5 text-green-600 mr-2" />
                <span className="text-green-800 font-medium">–°–∫–∞—á–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã</span>
              </button>
            </div>
          </div>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="card">
            <h3 className="font-semibold text-gray-900 mb-4">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
            <div className="space-y-3 text-sm">
              <div className="flex justify-between">
                <span className="text-gray-600">–°—Ç–∞—Ç—É—Å:</span>
                <span className="status-completed">–ó–∞–≤–µ—Ä—à–µ–Ω–æ</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">Bot ID:</span>
                <span className="text-gray-900 font-mono text-xs">{lesson.bot_id}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">Materials ID:</span>
                <span className="text-gray-900 font-mono text-xs">{lesson.materials_id}</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default LessonDetailPage 