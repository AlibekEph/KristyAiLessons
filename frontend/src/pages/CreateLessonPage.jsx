import React, { useState } from 'react'
import { useNavigate } from 'react-router-dom'
import { 
  ArrowLeft, 
  Plus, 
  AlertCircle, 
  CheckCircle, 
  Clock,
  Languages,
  Users,
  Link as LinkIcon
} from 'lucide-react'
import { Link } from 'react-router-dom'
import { lessonsAPI, apiUtils } from '../services/api'
import LoadingSpinner from '../components/LoadingSpinner'

function CreateLessonPage() {
  const navigate = useNavigate()
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState(null)
  const [success, setSuccess] = useState(null)
  
  const [formData, setFormData] = useState({
    meeting_url: '',
    lesson_type: 'chinese',
    student_level: 'beginner'
  })

  const handleInputChange = (e) => {
    const { name, value } = e.target
    setFormData(prev => ({
      ...prev,
      [name]: value
    }))
  }

  const validateForm = () => {
    if (!formData.meeting_url.trim()) {
      setError('URL –≤—Å—Ç—Ä–µ—á–∏ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è')
      return false
    }

    // –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è URL
    if (!formData.meeting_url.match(/^https?:\/\/.+/)) {
      setError('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL –≤—Å—Ç—Ä–µ—á–∏ (–¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å http:// –∏–ª–∏ https://)')
      return false
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    const supportedPlatforms = ['meet.google.com', 'zoom.us', 'teams.microsoft.com']
    const isSupported = supportedPlatforms.some(platform => 
      formData.meeting_url.includes(platform)
    )
    
    if (!isSupported) {
      setError('–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ Google Meet, Zoom –∏ Microsoft Teams')
      return false
    }

    return true
  }

  const handleSubmit = async (e) => {
    e.preventDefault()
    
    if (!validateForm()) {
      return
    }

    setLoading(true)
    setError(null)
    setSuccess(null)

    try {
      const response = await lessonsAPI.create(formData)
      
      setSuccess('–£—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! –ó–∞–ø–∏—Å—å –Ω–∞—á–∞–ª–∞—Å—å.')
      
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É—Ä–æ–∫–∞ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
      setTimeout(() => {
        navigate(`/lessons/${response.lesson_id}`)
      }, 2000)
      
    } catch (err) {
      console.error('Failed to create lesson:', err)
      setError(apiUtils.formatError(err))
    } finally {
      setLoading(false)
    }
  }

  const lessonTypes = [
    { value: 'chinese', label: '–ö–∏—Ç–∞–π—Å–∫–∏–π —è–∑—ã–∫', emoji: 'üá®üá≥' },
    { value: 'english', label: '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫', emoji: 'üá∫üá∏' },
    { value: 'spanish', label: '–ò—Å–ø–∞–Ω—Å–∫–∏–π —è–∑—ã–∫', emoji: 'üá™üá∏' },
    { value: 'french', label: '–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π —è–∑—ã–∫', emoji: 'üá´üá∑' },
    { value: 'german', label: '–ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫', emoji: 'üá©üá™' }
  ]

  const studentLevels = [
    { value: 'beginner', label: '–ù–∞—á–∏–Ω–∞—é—â–∏–π', description: '–ò–∑—É—á–∞–µ—Ç –æ—Å–Ω–æ–≤—ã —è–∑—ã–∫–∞' },
    { value: 'intermediate', label: '–°—Ä–µ–¥–Ω–∏–π', description: '–ú–æ–∂–µ—Ç –≤–µ—Å—Ç–∏ –ø—Ä–æ—Å—Ç—ã–µ –¥–∏–∞–ª–æ–≥–∏' },
    { value: 'advanced', label: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π', description: '–°–≤–æ–±–æ–¥–Ω–æ –≤–ª–∞–¥–µ–µ—Ç —è–∑—ã–∫–æ–º' }
  ]

  return (
    <div className="max-w-2xl mx-auto">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="mb-8">
        <Link 
          to="/" 
          className="inline-flex items-center text-gray-600 hover:text-gray-900 mb-4 transition-colors"
        >
          <ArrowLeft className="w-4 h-4 mr-2" />
          –ù–∞–∑–∞–¥ –∫ —É—Ä–æ–∫–∞–º
        </Link>
        
        <h1 className="text-3xl font-bold text-gray-900 mb-2">–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —É—Ä–æ–∫</h1>
        <p className="text-gray-600">
          –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —É—Ä–æ–∫–∞ –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–ø–∏—Å—å –≤—Å—Ç—Ä–µ—á–∏
        </p>
      </div>

      {/* –§–æ—Ä–º–∞ */}
      <div className="card">
        <form onSubmit={handleSubmit} className="space-y-6">
          {/* URL –≤—Å—Ç—Ä–µ—á–∏ */}
          <div>
            <label htmlFor="meeting_url" className="form-label">
              <LinkIcon className="w-4 h-4 inline mr-2" />
              URL –≤—Å—Ç—Ä–µ—á–∏ *
            </label>
            <input
              type="url"
              id="meeting_url"
              name="meeting_url"
              value={formData.meeting_url}
              onChange={handleInputChange}
              placeholder="https://meet.google.com/your-meeting-id"
              className="form-input"
              required
            />
            <p className="text-sm text-gray-500 mt-1">
              –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è Google Meet, Zoom –∏ Microsoft Teams
            </p>
          </div>

          {/* –¢–∏–ø —É—Ä–æ–∫–∞ */}
          <div>
            <label htmlFor="lesson_type" className="form-label">
              <Languages className="w-4 h-4 inline mr-2" />
              –¢–∏–ø —É—Ä–æ–∫–∞ *
            </label>
            <select
              id="lesson_type"
              name="lesson_type"
              value={formData.lesson_type}
              onChange={handleInputChange}
              className="form-input"
              required
            >
              {lessonTypes.map(type => (
                <option key={type.value} value={type.value}>
                  {type.emoji} {type.label}
                </option>
              ))}
            </select>
            <p className="text-sm text-gray-500 mt-1">
              –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫, –∫–æ—Ç–æ—Ä—ã–π –∏–∑—É—á–∞–µ—Ç—Å—è –Ω–∞ —É—Ä–æ–∫–µ
            </p>
          </div>

          {/* –£—Ä–æ–≤–µ–Ω—å —Å—Ç—É–¥–µ–Ω—Ç–∞ */}
          <div>
            <label htmlFor="student_level" className="form-label">
              <Users className="w-4 h-4 inline mr-2" />
              –£—Ä–æ–≤–µ–Ω—å —Å—Ç—É–¥–µ–Ω—Ç–∞ *
            </label>
            <div className="space-y-3">
              {studentLevels.map(level => (
                <label key={level.value} className="flex items-start space-x-3 cursor-pointer">
                  <input
                    type="radio"
                    name="student_level"
                    value={level.value}
                    checked={formData.student_level === level.value}
                    onChange={handleInputChange}
                    className="mt-1 w-4 h-4 text-primary-600 border-gray-300 focus:ring-primary-500"
                  />
                  <div className="flex-1">
                    <div className="font-medium text-gray-900">{level.label}</div>
                    <div className="text-sm text-gray-500">{level.description}</div>
                  </div>
                </label>
              ))}
            </div>
          </div>

          {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
          {error && (
            <div className="bg-red-50 border border-red-200 rounded-lg p-4">
              <div className="flex items-center">
                <AlertCircle className="w-5 h-5 text-red-500 mr-2" />
                <p className="text-red-700">{error}</p>
              </div>
            </div>
          )}

          {success && (
            <div className="bg-green-50 border border-green-200 rounded-lg p-4">
              <div className="flex items-center">
                <CheckCircle className="w-5 h-5 text-green-500 mr-2" />
                <p className="text-green-700">{success}</p>
              </div>
            </div>
          )}

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–ª–æ–∫ */}
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
            <div className="flex items-start">
              <Clock className="w-5 h-5 text-blue-500 mr-2 mt-0.5" />
              <div className="text-sm text-blue-700">
                <div className="font-medium mb-1">–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è:</div>
                <ul className="list-disc list-inside space-y-1">
                  <li>–ë–æ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—Å—è –∫ –≤—Å—Ç—Ä–µ—á–µ –∏ –Ω–∞—á–Ω–µ—Ç –∑–∞–ø–∏—Å—å</li>
                  <li>–ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏</li>
                  <li>–ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á–∏ –Ω–∞—á–Ω–µ—Ç—Å—è AI-–æ–±—Ä–∞–±–æ—Ç–∫–∞</li>
                  <li>–ë—É–¥—É—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã —É—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ</li>
                </ul>
              </div>
            </div>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ */}
          <div className="flex items-center justify-between pt-6 border-t border-gray-200">
            <Link to="/" className="btn-secondary">
              –û—Ç–º–µ–Ω–∞
            </Link>
            
            <button
              type="submit"
              disabled={loading}
              className="btn-primary min-w-[160px]"
            >
              {loading ? (
                <LoadingSpinner size="sm" text="–°–æ–∑–¥–∞–Ω–∏–µ..." />
              ) : (
                <>
                  <Plus className="w-4 h-4 mr-2" />
                  –°–æ–∑–¥–∞—Ç—å —É—Ä–æ–∫
                </>
              )}
            </button>
          </div>
        </form>
      </div>
    </div>
  )
}

export default CreateLessonPage 