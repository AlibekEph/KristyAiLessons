#!/usr/bin/env python3
"""–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ YandexGPT –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ –∫–∏—Ç–∞–π—Å–∫–∏—Ö —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–π"""

import asyncio
from src.services.enhanced_transcription_service import EnhancedTranscriptionService
from src.services.yandexgpt_service import YandexGPTService
from src.config import Settings


async def test_chinese_correction():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ –∫–∏—Ç–∞–π—Å–∫–∏—Ö —Å–ª–æ–≤ –≤ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏"""
    
    # –ü—Ä–∏–º–µ—Ä—ã —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–π —Å –æ—à–∏–±–∫–∞–º–∏ (–∫–∏—Ç–∞–π—Å–∫–∏–µ —Å–ª–æ–≤–∞ –∑–∞–ø–∏—Å–∞–Ω—ã –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π)
    test_transcripts = [
        # –ü—Ä–∏–º–µ—Ä 1: –ß–∏—Å–ª–∞
        "–ü—Ä–∏–≤–µ—Ç, –ê–ª–∏–±–µ–∫. –°–µ–≥–æ–¥–Ω—è –º—ã —Å —Ç–æ–±–æ–π –±—É–¥–µ–º —Ä–∞–∑–±–∏—Ä–∞—Ç—å –Ω–æ–≤—É—é —Ç–µ–º—É –Ω–∞ –∫–∏—Ç–∞–π—Å–∫–æ–º. –ß–∏—Å–ª–∞. –û–¥–∏–Ω –±—É–¥–µ—Ç –ï. –î–≤–∞ –±—É–¥–µ—Ç –û. –¢—Ä–∏ –±—É–¥–µ—Ç –°–ê–ù. –°–ê–ù —Ç—Ä–µ—Ç–∏–π —Ç–æ–Ω. –û–¥–∏–Ω, –¥–≤–∞, —Ç—Ä–∏. –ü—è—Ç—å –±—É–¥–µ—Ç –£. –ü—è—Ç—å –±—É–¥–µ—Ç –£, –æ–¥–∏–Ω–Ω–∞–¥—Ü–∞—Ç—å –±—É–¥–µ—Ç –®–ò–ï. –ö–∞–∫ –¥–µ–ª–∞? –ë—É–¥–µ—Ç –ù–ò–•–ê–£–ú–ê. –ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ø —Ö–æ—Ä–æ—à–æ, –Ω–∞–¥–æ —Å–∫–∞–∑–∞—Ç—å –í–û–•–≠–ù–•–ê–£.",
        
        # –ü—Ä–∏–º–µ—Ä 2: –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
        "–ù–∞ —É—Ä–æ–∫–µ –º—ã –∏–∑—É—á–∏–ª–∏ –±–∞–∑–æ–≤—ã–µ —Ñ—Ä–∞–∑—ã. –ü—Ä–∏–≤–µ—Ç –Ω–∞ –∫–∏—Ç–∞–π—Å–∫–æ–º - —ç—Ç–æ –Ω–∏—Ö–∞–æ. –ö–∞–∫ –¥–µ–ª–∞ –±—É–¥–µ—Ç –Ω–∏—Ö–∞–æ –º–∞. –ú–µ–Ω—è –∑–æ–≤—É—Ç - –≤–æ —Ü–∑—è–æ. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è - —Ü–∑–∞–π—Ü–∑—è–Ω—å.",
        
        # –ü—Ä–∏–º–µ—Ä 3: –°–º–µ—à–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
        "–°–µ–≥–æ–¥–Ω—è –ø–æ–≤—Ç–æ—Ä—è–µ–º —á–∏—Å–ª–∞ –æ—Ç –∏ –¥–æ —à–∏. –≠—Ç–æ –æ–¥–∏–Ω, –∞—Ä, —Å–∞–Ω, —Å—ã, —É, –ª—é, —Ü–∏, –±–∞, —Ü–∑—é, —à–∏. –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –≥–æ–≤–æ—Ä–∏—Ç: –∑–∞–ø–æ–º–Ω–∏—Ç–µ, —á—Ç–æ —à–∏ —ç—Ç–æ –¥–µ—Å—è—Ç—å.",
    ]
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settings = Settings()
    
    try:
        # –°–æ–∑–¥–∞–µ–º YandexGPT —Å–µ—Ä–≤–∏—Å
        yandex_service = YandexGPTService(
            folder_id=settings.YANDEX_FOLDER_ID,
            api_key=settings.YANDEX_API_KEY,
            model_uri=settings.YANDEX_MODEL_URI
        )
        
        print("üîß YandexGPT —Å–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        print("=" * 80)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –ø—Ä–∏–º–µ—Ä
        for i, original_text in enumerate(test_transcripts, 1):
            print(f"\nüìù –¢–ï–°–¢ {i}")
            print("-" * 60)
            print(f"–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç:")
            print(f"üî§ {original_text}")
            
            try:
                # –ü—Ä–∏–º–µ–Ω—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ü–∏—é
                corrected_text = await yandex_service._correct_chinese_transcript(original_text)
                
                print(f"\n–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:")
                print(f"üå∏ {corrected_text}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ–±–∞–≤–∏–ª–∏—Å—å –ª–∏ –∫–∏—Ç–∞–π—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã
                has_chinese_original = any('\u4e00' <= char <= '\u9fff' for char in original_text)
                has_chinese_corrected = any('\u4e00' <= char <= '\u9fff' for char in corrected_text)
                
                if not has_chinese_original and has_chinese_corrected:
                    print("‚úÖ –ö–æ—Ä—Ä–µ–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–∞: –¥–æ–±–∞–≤–ª–µ–Ω—ã –∫–∏—Ç–∞–π—Å–∫–∏–µ –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã")
                elif has_chinese_original and has_chinese_corrected:
                    print("‚úÖ –ö–æ—Ä—Ä–µ–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: –∫–∏—Ç–∞–π—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã/—É–ª—É—á—à–µ–Ω—ã")
                else:
                    print("‚ö†Ô∏è –ö–æ—Ä—Ä–µ–∫—Ü–∏—è –Ω–µ –¥–æ–±–∞–≤–∏–ª–∞ –∫–∏—Ç–∞–π—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏: {e}")
            
            print("-" * 60)
        
        print("\n" + "=" * 80)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º Enhanced Transcription Service
        print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Enhanced Transcription Service —Å –∫–æ—Ä—Ä–µ–∫—Ü–∏–µ–π")
        print("-" * 60)
        
        enhanced_service = EnhancedTranscriptionService(
            recall_api_key=settings.RECALL_API_KEY,
            assemblyai_api_key=settings.ASSEMBLYAI_API_KEY
        )
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ñ–∏–∫—Ç–∏–≤–Ω—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
        test_result = {
            "text": test_transcripts[0],
            "confidence": 0.85,
            "language": "mixed"
        }
        
        corrected_result = await enhanced_service._apply_intelligent_post_processing(
            test_result, 
            "chinese"
        )
        
        print(f"–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: {test_result['text'][:100]}...")
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {corrected_result['text'][:100]}...")
        print(f"YandexGPT –∫–æ—Ä—Ä–µ–∫—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞: {corrected_result.get('yandexgpt_correction_applied', False)}")
        
        if corrected_result.get('yandexgpt_correction_error'):
            print(f"‚ùå –û—à–∏–±–∫–∞: {corrected_result['yandexgpt_correction_error']}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ YandexGPT —É–∫–∞–∑–∞–Ω—ã –≤ .env —Ñ–∞–π–ª–µ:")
        print("   - YANDEX_FOLDER_ID")
        print("   - YANDEX_API_KEY")
        print("   - YANDEX_MODEL_URI (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ YandexGPT –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ –∫–∏—Ç–∞–π—Å–∫–∏—Ö —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–π")
    print("=" * 80)
    await test_chinese_correction()


if __name__ == "__main__":
    asyncio.run(main()) 